# Generated by Django 2.2.6 on 2019-10-16 18:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import eneza.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question_type', models.CharField(choices=[('MULTI_CHOICE_QUESTION_TYPE', 'MULTI_CHOICE_QUESTION_TYPE'), ('FREE_FORM_QUESTION_TYPE', 'FREE_FORM_QUESTION_TYPE')], max_length=100)),
                ('position', models.PositiveIntegerField()),
                ('content', models.TextField()),
                ('points', models.PositiveIntegerField(default=1)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_questions_creator', related_query_name='eneza_questions_updater', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Questions',
                'db_table': 'questions',
                'ordering': ('-position',),
            },
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_quizs_creator', related_query_name='eneza_quizs_updater', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_quizs_updated_by', related_query_name='eneza_quizs_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Quizes',
                'db_table': 'quizes',
            },
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubmittedAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_submittedanswers_creator', related_query_name='eneza_submittedanswers_updater', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='question_solutions', to='eneza.Question')),
            ],
            options={
                'verbose_name_plural': 'SubmittedAnswers',
                'db_table': 'submitted_answers',
            },
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubmittedSolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('retake', models.BooleanField(default=False)),
                ('complete', models.BooleanField(default=False)),
                ('total_points', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_submittedsolutions_creator', related_query_name='eneza_submittedsolutions_updater', to=settings.AUTH_USER_MODEL)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quiz_submitted_solutions', to='eneza.Quiz')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_submittedsolutions_updated_by', related_query_name='eneza_submittedsolutions_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_submitted_solutions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'SubmittedSolutions',
                'db_table': 'submitted_solutions',
            },
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='FreeFormQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='eneza.Question')),
                ('answer', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'FreeFormQuestions',
                'db_table': 'free_form_questions',
                'ordering': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            bases=('eneza.question',),
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='MultiChoiceQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='eneza.Question')),
            ],
            options={
                'verbose_name_plural': 'MultiChoiceQuestions',
                'db_table': 'multi_choice_questions',
                'ordering': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            bases=('eneza.question',),
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubmittedFreeformAnswer',
            fields=[
                ('submittedanswer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='eneza.SubmittedAnswer')),
                ('answer', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'SubmittedFreeformAnswers',
                'db_table': 'submitted_freeform_answers',
                'ordering': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            bases=('eneza.submittedanswer',),
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubmittedMultichoiceAnswer',
            fields=[
                ('submittedanswer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='eneza.SubmittedAnswer')),
            ],
            options={
                'verbose_name_plural': 'SubmittedMultichoiceAnswers',
                'db_table': 'submitted_multichoice_answers',
                'ordering': ('-updated_at', '-created_at'),
                'abstract': False,
            },
            bases=('eneza.submittedanswer',),
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='VideoTutorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('video', models.FileField(upload_to='video_tutorials', validators=[django.core.validators.FileExtensionValidator(['mp4', 'mkv'])])),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_videotutorials_creator', related_query_name='eneza_videotutorials_updater', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_videotutorials_updated_by', related_query_name='eneza_videotutorials_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'VideoTutorials',
                'db_table': 'video_tutorials',
            },
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubmittedSolutionActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acitivity', models.CharField(choices=[('RETAKE_COUNT', 'RETAKE_COUNT'), ('START_TEST', 'START_TEST'), ('END_TEST', 'END_TEST'), ('CANCEL_TEST', 'CANCEL_TEST')], max_length=255)),
                ('context', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_submittedsolutionactivitys_creator', related_query_name='eneza_submittedsolutionactivitys_updater', to=settings.AUTH_USER_MODEL)),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='solution_activities', to='eneza.SubmittedSolution')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_submittedsolutionactivitys_updated_by', related_query_name='eneza_submittedsolutionactivitys_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'SubmittedSolutionActivies',
                'db_table': 'submitted_solution_activities',
            },
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.AddField(
            model_name='submittedanswer',
            name='solution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='solution_answers', to='eneza.SubmittedSolution'),
        ),
        migrations.AddField(
            model_name='submittedanswer',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_submittedanswers_updated_by', related_query_name='eneza_submittedanswers_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_students_creator', related_query_name='eneza_students_updater', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_students_updated_by', related_query_name='eneza_students_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Students',
                'db_table': 'students',
            },
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.AddField(
            model_name='quiz',
            name='video_tutorial',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quiz', to='eneza.VideoTutorial'),
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questios', to='eneza.Quiz'),
        ),
        migrations.AddField(
            model_name='question',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_questions_updated_by', related_query_name='eneza_questions_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MultiChoiceQuestionChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('choice', models.TextField()),
                ('position', models.PositiveIntegerField()),
                ('answer', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_multichoicequestionchoices_creator', related_query_name='eneza_multichoicequestionchoices_updater', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_multichoicequestionchoices_updated_by', related_query_name='eneza_multichoicequestionchoices_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'MultiChoiceQuestionChoices',
                'db_table': 'multi_choice_question_choices',
                'ordering': ('-position',),
            },
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_instructors_creator', related_query_name='eneza_instructors_updater', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='eneza_instructors_updated_by', related_query_name='eneza_instructors_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='instructor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Instructors',
                'db_table': 'instructors',
            },
            managers=[
                ('items', django.db.models.manager.Manager()),
                ('objects', eneza.models.AbstractBaseManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='submittedsolution',
            constraint=models.UniqueConstraint(fields=('user', 'quiz'), name='user-quiz'),
        ),
        migrations.AddField(
            model_name='submittedmultichoiceanswer',
            name='multichoice_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='multichoice_answers', to='eneza.MultiChoiceQuestion'),
        ),
        migrations.AddField(
            model_name='submittedmultichoiceanswer',
            name='selected_choice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='choice_answers', to='eneza.MultiChoiceQuestionChoice'),
        ),
        migrations.AddField(
            model_name='submittedfreeformanswer',
            name='freeform_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='freeform_answers', to='eneza.FreeFormQuestion'),
        ),
        migrations.AddConstraint(
            model_name='submittedanswer',
            constraint=models.UniqueConstraint(fields=('solution', 'question'), name='solution-question'),
        ),
        migrations.AddConstraint(
            model_name='question',
            constraint=models.UniqueConstraint(fields=('position', 'quiz_id'), name='quiz-question-position'),
        ),
        migrations.AddField(
            model_name='multichoicequestionchoice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='eneza.MultiChoiceQuestion'),
        ),
        migrations.AddConstraint(
            model_name='multichoicequestionchoice',
            constraint=models.UniqueConstraint(fields=('position', 'question_id'), name='question-position-choice'),
        ),
    ]
